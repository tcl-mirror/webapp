#LyX 1.6.2 created this file. For more info see http://www.lyx.org/
\lyxformat 345
\begin_document
\begin_header
\textclass book
\use_default_options false
\language english
\inputencoding auto
\font_roman default
\font_sans default
\font_typewriter default
\font_default_family default
\font_sc false
\font_osf false
\font_sf_scale 100
\font_tt_scale 100

\graphics default
\paperfontsize default
\spacing single
\use_hyperref false
\papersize letterpaper
\use_geometry true
\use_amsmath 1
\use_esint 0
\cite_engine basic
\use_bibtopic false
\paperorientation portrait
\leftmargin 1in
\topmargin 1in
\rightmargin 1in
\bottommargin 1in
\secnumdepth 3
\tocdepth 3
\paragraph_separation skip
\defskip medskip
\quotes_language english
\papercolumns 1
\papersides 2
\paperpagestyle fancy
\tracking_changes false
\output_changes false
\author "" 
\author "" 
\end_header

\begin_body

\begin_layout Title
Tcl Web Application Framework:
\begin_inset Newline newline
\end_inset

Developer's Manual
\end_layout

\begin_layout Author
\begin_inset Graphics
	filename /home/rkeene/work/ke/ke-logo-big.png
	lyxscale 12
	scale 12
	keepAspectRatio

\end_inset


\end_layout

\begin_layout Address

\noun on
Keene Enterprises
\noun default

\begin_inset Newline newline
\end_inset

105E Arbor Gate Circle
\begin_inset Newline newline
\end_inset

Picayune, MS
\begin_inset Newline newline
\end_inset

39466-6001
\end_layout

\begin_layout Standard
\begin_inset CommandInset toc
LatexCommand tableofcontents

\end_inset


\end_layout

\begin_layout Chapter
Introduction
\end_layout

\begin_layout Standard
Welcome to the Tcl Web Application Framework Developer's Manual.
\end_layout

\begin_layout Section
Scope of This Document
\end_layout

\begin_layout Standard
This document is intended for software developers or advanced system administrat
ors who wish to modify or enhance the functionality of the Tcl Web Application
 Framework.
\end_layout

\begin_layout Standard
System administrators interested in configuration details should consult
 the Tcl Web Application Framework User's Guide.
\end_layout

\begin_layout Section
System Requirements
\end_layout

\begin_layout Standard
The Tcl Web Application Framework uses 
\begin_inset Quotes eld
\end_inset

mod_rivet
\begin_inset Quotes erd
\end_inset

 and the Apache Software Foundation's 
\begin_inset Quotes eld
\end_inset

httpd
\begin_inset Quotes erd
\end_inset

 web server.
 Additionally, the database back-end uses 
\begin_inset Quotes eld
\end_inset

MySQL
\begin_inset Quotes erd
\end_inset

 and 
\begin_inset Quotes eld
\end_inset

Mysqltcl
\begin_inset Quotes erd
\end_inset


\end_layout

\begin_layout Subsection
Apache
\end_layout

\begin_layout Standard
Apache version 1.3.29 or greater is required.
\end_layout

\begin_layout Subsection
mod_rivet
\end_layout

\begin_layout Standard
The Apache module 
\begin_inset Quotes eld
\end_inset

mod_rivet
\begin_inset Quotes erd
\end_inset

 version 0.4.1 or greater is highly recommended.
\end_layout

\begin_layout Subsection
Mysqtcl
\end_layout

\begin_layout Standard
Mysqltcl version 2.51 or greater is required.
\end_layout

\begin_layout Chapter
Overview
\end_layout

\begin_layout Section
Initialization
\end_layout

\begin_layout Standard
Initialization is done on both persistent and non-persistent portions of
 the code.
\end_layout

\begin_layout Section
Output Generation
\end_layout

\begin_layout Standard
Modules do most of the output generation.
\end_layout

\begin_layout Section
Persistent versus Non-persistent
\end_layout

\begin_layout Standard
The Tcl Web Application Framework is written as a Rivet (mod_rivet) application
 so portions of the code may remain loaded after a request has finished
 processing.
 The portions of code that remain loaded are referred to as persistent.
 Portions of the code are kept persistent to avoid the need to re-read and
 parse components that will never change during run-time (e.g., function definitio
ns.) Non-persistent portions of code are those pieces of the code that are
 created and destroyed completely within a single request.
 Portions of the code are made non-persistent to avoid situations where
 information from a separate request 
\begin_inset Quotes eld
\end_inset

collides
\begin_inset Quotes erd
\end_inset

 with information from the current request.
 Things such as the session variables, the request arguments, and the 
\begin_inset Quotes eld
\end_inset

current user
\begin_inset Quotes erd
\end_inset

 are all kept in non-persistent portions of code.
\end_layout

\begin_layout Subsection
Persistent Code
\end_layout

\begin_layout Standard
Anything that is not in the 
\begin_inset Quotes eld
\end_inset

request
\begin_inset Quotes erd
\end_inset

 namespace is to be considered persistent.
 Every module resides in its own namespace so every module is considered
 persistent.
\end_layout

\begin_layout Standard
The 
\begin_inset Quotes eld
\end_inset

session
\begin_inset Quotes erd
\end_inset

 module references the 
\begin_inset Quotes eld
\end_inset

request
\begin_inset Quotes erd
\end_inset

 namespace to store its non-persistent data.
\end_layout

\begin_layout Standard
Most code should be written as persistent code to minimize CPU time spent
 parsing to process a request.
\end_layout

\begin_layout Subsection
Non-Persistent Code
\end_layout

\begin_layout Standard
Anything that is in the 
\begin_inset Quotes eld
\end_inset

request
\begin_inset Quotes erd
\end_inset

 namespace is to be considered non-persistent.
 Every HTTP request gets its own unique and exclusive 
\begin_inset Quotes eld
\end_inset

request
\begin_inset Quotes erd
\end_inset

 namespace that will never be reused.
\end_layout

\begin_layout Chapter
Modules
\end_layout

\begin_layout Standard
Modules are a key component in the Tcl Web Application Framework.
 They serve as an the event handlers and as the primary front-end control
 mechanism.
\end_layout

\begin_layout Standard
Each module requires its own namespace, which it will register with the
 Modules package (see 
\family typewriter
modules::register
\family default
).
\end_layout

\begin_layout Standard
A module must have an 
\begin_inset Quotes eld
\end_inset

init
\begin_inset Quotes erd
\end_inset

 function within its namespace.
 The 
\begin_inset Quotes eld
\end_inset

init
\begin_inset Quotes erd
\end_inset

 function will be called upon registration and registration will fail if
 the 
\begin_inset Quotes eld
\end_inset

init
\begin_inset Quotes erd
\end_inset

 function returns 0.
\end_layout

\begin_layout Standard
Every function within the module namespace, except the 
\begin_inset Quotes eld
\end_inset

init
\begin_inset Quotes erd
\end_inset

 function, is subject to be called with exactly 1 argument -- the action
 and list of sub-actions to process.
 Each function within the module namespace should serve as an event handler.
\end_layout

\begin_layout Standard
The default action for a module is 
\begin_inset Quotes eld
\end_inset

main
\begin_inset Quotes erd
\end_inset

.
 It is recommended that every module provide a main function.
 If a module registers an icon (using 
\family typewriter
modules::register
\family default
) then a 
\begin_inset Quotes eld
\end_inset

main
\begin_inset Quotes erd
\end_inset

 function must be provided.
\end_layout

\begin_layout Standard
Functions which should not be exposed to raw interaction should be placed
 in a package rather than a module.
\end_layout

\begin_layout Standard
A module should never insert data into the output stream, but rather return
 the name of a Rivet document to parse.
 Returning an empty string indicates failure.
 The name of the document to parse should be relative to the module's top-level
 directory unless it begins with a 
\begin_inset Quotes eld
\end_inset

/
\begin_inset Quotes erd
\end_inset

.
 If the returned filename begins with a 
\begin_inset Quotes eld
\end_inset

/
\begin_inset Quotes erd
\end_inset

 it indicates that the filename is relative to the Tcl Web Application Framework
's top-level directory (or site-local directory).
\end_layout

\begin_layout Section
Current Modules
\end_layout

\begin_layout Subsection
User Administration
\end_layout

\begin_layout Standard
The User Administration module provides the user-interface for managing
 users within the system.
 It includes event handlers for:
\end_layout

\begin_layout Itemize
Creating new users
\end_layout

\begin_layout Itemize
Deleting existing users
\end_layout

\begin_layout Itemize
Modifying existing users parameters (subject to limitations)
\end_layout

\begin_layout Itemize
Retrieving information about existing users
\end_layout

\begin_layout Itemize
Switching users (requires the 
\begin_inset Quotes eld
\end_inset

root
\begin_inset Quotes erd
\end_inset

 flag)
\end_layout

\begin_layout Standard
Execution of handlers in the User Administration module requires the 
\begin_inset Quotes eld
\end_inset

admin
\begin_inset Quotes erd
\end_inset

 flag.
\end_layout

\begin_layout Subsection
Notes
\end_layout

\begin_layout Subsubsection
Not yet implemented
\end_layout

\begin_layout Subsection
Workorder Viewer
\end_layout

\begin_layout Subsubsection
Not yet implemented
\end_layout

\begin_layout Subsection
Workorder Placement
\end_layout

\begin_layout Subsubsection
Not yet implemented
\end_layout

\begin_layout Subsection
Lesson Plans
\end_layout

\begin_layout Subsubsection
Not yet implemented
\end_layout

\begin_layout Subsection
Calendar
\end_layout

\begin_layout Subsubsection
Not yet implemented
\end_layout

\begin_layout Subsection
Homepages
\end_layout

\begin_layout Subsubsection
Not yet implemented
\end_layout

\begin_layout Subsection
School Pages
\end_layout

\begin_layout Chapter
Packages
\end_layout

\begin_layout Standard
The basis for the entire application framework are the packages.
 The packages are persistent and reside in their own namespaces.
 The packages may have interdependencies, but they are required to resolve
 these dependencies.
\end_layout

\begin_layout Section
Database
\end_layout

\begin_layout Subsection
Overview
\end_layout

\begin_layout Standard
The database package provides a clean and safe way to interact with a generic
 database back-end.
 Currently only the MySQL back-end is used.
\end_layout

\begin_layout Subsection
Functions
\end_layout

\begin_layout Subsubsection
db::create
\end_layout

\begin_layout Enumerate
Syntax
\end_layout

\begin_deeper
\begin_layout Enumerate

\family typewriter
db::create -dbname <dbname> -fields <fields_list>
\end_layout

\end_deeper
\begin_layout Enumerate
Arguments
\end_layout

\begin_deeper
\begin_layout Enumerate
-dbname <dbname>
\end_layout

\begin_deeper
\begin_layout Enumerate
This required parameter specifies the name of the database to create.
\end_layout

\end_deeper
\begin_layout Enumerate
-fields <field_list>
\end_layout

\begin_deeper
\begin_layout Enumerate
This required parameter specifies the list of fields.
\end_layout

\begin_layout Enumerate
Any element in the list may contain a colon (:) followed by any of the following
:
\end_layout

\begin_deeper
\begin_layout Enumerate
pk (Primary Key)
\end_layout

\begin_layout Enumerate
u (Unique)
\end_layout

\end_deeper
\end_deeper
\end_deeper
\begin_layout Enumerate
Return Value
\end_layout

\begin_deeper
\begin_layout Enumerate
This function returns 1 on success, 0 otherwise
\end_layout

\begin_layout Enumerate
An error may be returned if the database back-end could not be opened.
\end_layout

\end_deeper
\begin_layout Enumerate
Notes
\end_layout

\begin_deeper
\begin_layout Enumerate
(none)
\end_layout

\end_deeper
\begin_layout Subsubsection
db::set
\end_layout

\begin_layout Enumerate
Syntax
\end_layout

\begin_deeper
\begin_layout Enumerate

\family typewriter
db::set -dbname <dbname> -field <fieldname> <fieldvalue> ?-where <expression>?
\end_layout

\end_deeper
\begin_layout Enumerate
Arguments
\end_layout

\begin_deeper
\begin_layout Enumerate
-dbname <dbname>
\end_layout

\begin_layout Enumerate
-field <fieldname> <fieldvalue>
\end_layout

\begin_layout Enumerate
-where <expression>
\end_layout

\end_deeper
\begin_layout Enumerate
Return Value
\end_layout

\begin_deeper
\begin_layout Enumerate
This function returns 1 on success, 0 otherwise.
\end_layout

\begin_layout Enumerate
An error may be returned if the database back-end could not be initialized.
\end_layout

\end_deeper
\begin_layout Enumerate
Notes
\end_layout

\begin_deeper
\begin_layout Enumerate
The 
\family typewriter
db::set
\family default
 function sets the specified field in the specified database to the specified
 value.
 If there 
\begin_inset Quotes eld
\end_inset

where
\begin_inset Quotes erd
\end_inset

 parameter is supplied then the specified field's value is changed to the
 specified value in every occurance matching the specified expression.
 If there are no fields matching success is still indicated.
 If the 
\begin_inset Quotes eld
\end_inset

where
\begin_inset Quotes erd
\end_inset

 parameter is omited a new entry is created (or an existing entry is updated
 if creating a new entry would violate the 
\begin_inset Quotes eld
\end_inset

unique
\begin_inset Quotes erd
\end_inset

-ness quality of the specified field.)
\end_layout

\end_deeper
\begin_layout Subsubsection
db::unset
\end_layout

\begin_layout Enumerate
Syntax
\end_layout

\begin_deeper
\begin_layout Enumerate

\family typewriter
db::unset -dbname <dbname> -where <expression> ?-fields <field_list>?
\end_layout

\end_deeper
\begin_layout Enumerate
Arguments
\end_layout

\begin_deeper
\begin_layout Enumerate
-dbname <dbname>
\end_layout

\begin_layout Enumerate
-where <expression>
\end_layout

\begin_layout Enumerate
-fields <field_list>
\end_layout

\end_deeper
\begin_layout Enumerate
Return Value
\end_layout

\begin_deeper
\begin_layout Enumerate
This function returns 1 on success, 0 otherwise.
\end_layout

\begin_layout Enumerate
An error may be returned if the database back-end could not be initialized.
\end_layout

\end_deeper
\begin_layout Enumerate
Notes
\end_layout

\begin_deeper
\begin_layout Enumerate
(none)
\end_layout

\end_deeper
\begin_layout Subsubsection
db::get
\end_layout

\begin_layout Enumerate
Syntax
\end_layout

\begin_deeper
\begin_layout Enumerate

\family typewriter
db::get -dbname <dbname> ?-fields <field_list>? ?-where <expression>? ?-field
 <field>?
\end_layout

\end_deeper
\begin_layout Enumerate
Arguments
\end_layout

\begin_deeper
\begin_layout Enumerate
-dbname <dbname>
\end_layout

\begin_layout Enumerate
-fields <field_list>
\end_layout

\begin_layout Enumerate
-where <expression>
\end_layout

\begin_layout Enumerate
-field <field>
\end_layout

\end_deeper
\begin_layout Enumerate
Return Value
\end_layout

\begin_deeper
\begin_layout Enumerate
This function returns a list or single value depending on the parameters
 passed.
\end_layout

\begin_layout Enumerate
If the 
\begin_inset Quotes eld
\end_inset

-fields
\begin_inset Quotes erd
\end_inset

 parameter is not passed and only one 
\begin_inset Quotes eld
\end_inset

-field
\begin_inset Quotes erd
\end_inset

 parameter is passed then this function returns a single value (unless the
 
\begin_inset Quotes eld
\end_inset

-where
\begin_inset Quotes erd
\end_inset

 parameter is not passed).
\end_layout

\begin_layout Enumerate
If the 
\begin_inset Quotes eld
\end_inset

-fields
\begin_inset Quotes erd
\end_inset

 parameter is passed or more than one 
\begin_inset Quotes eld
\end_inset

-field
\begin_inset Quotes erd
\end_inset

 parameter is passed then this function returns a list of the values for
 the specified fields (unless the 
\begin_inset Quotes eld
\end_inset

-where
\begin_inset Quotes erd
\end_inset

 parameter is not passed, then a list of lists is returned).
\end_layout

\begin_layout Enumerate
If the 
\begin_inset Quotes eld
\end_inset

-where
\begin_inset Quotes erd
\end_inset

 parameter is not passed, a list of whatever would normally be returned
 is returned each outer element refers to a single row in the database.
\end_layout

\end_deeper
\begin_layout Enumerate
Notes
\end_layout

\begin_deeper
\begin_layout Enumerate
(none)
\end_layout

\end_deeper
\begin_layout Subsubsection
db::fields
\end_layout

\begin_layout Enumerate
Syntax
\end_layout

\begin_deeper
\begin_layout Enumerate

\family typewriter
db::fields -dbname <dbname>
\end_layout

\end_deeper
\begin_layout Enumerate
Arguments
\end_layout

\begin_deeper
\begin_layout Enumerate
-dbname <dbname>
\end_layout

\end_deeper
\begin_layout Enumerate
Return Value
\end_layout

\begin_deeper
\begin_layout Enumerate
This function returns a list of fields that a given database was created
 with.
\end_layout

\end_deeper
\begin_layout Enumerate
Notes
\end_layout

\begin_deeper
\begin_layout Enumerate
(none)
\end_layout

\end_deeper
\begin_layout Section
User
\end_layout

\begin_layout Subsection
Overview
\end_layout

\begin_layout Standard
The User package handles all details related to user management and authenticati
on.
\end_layout

\begin_layout Standard
The User package provides the concept of a 
\begin_inset Quotes eld
\end_inset

current user.
\begin_inset Quotes erd
\end_inset

 The current user can be set using 
\family typewriter
user::setuid
\family default
 and retrieved using 
\family typewriter
user::getuid
\family default
.
 
\end_layout

\begin_layout Standard
Many User functions inspect the 
\begin_inset Quotes eld
\end_inset

current user
\begin_inset Quotes erd
\end_inset

 for the admin or root flags.
\end_layout

\begin_layout Standard
The 
\begin_inset Quotes eld
\end_inset

root
\begin_inset Quotes erd
\end_inset

 flag is a special flag any user with the 
\begin_inset Quotes eld
\end_inset

root
\begin_inset Quotes erd
\end_inset

 flag is considered to have all flags except those with a negative bias.
\end_layout

\begin_layout Subsection
Functions
\end_layout

\begin_layout Subsubsection
user::exists
\end_layout

\begin_layout Enumerate
Syntax
\end_layout

\begin_deeper
\begin_layout Enumerate

\family typewriter
user::exists <uid>
\end_layout

\end_deeper
\begin_layout Enumerate
Arguments
\end_layout

\begin_deeper
\begin_layout Enumerate
uid
\end_layout

\begin_deeper
\begin_layout Enumerate
The user ID to check for existence.
\end_layout

\end_deeper
\end_deeper
\begin_layout Enumerate
Return Value
\end_layout

\begin_deeper
\begin_layout Enumerate
This function returns 1 if the UID exists in the user database.
 0 if there is no such user or if the UID is invalid.
\end_layout

\begin_layout Enumerate
An error may be returned if the database system fails.
\end_layout

\end_deeper
\begin_layout Enumerate
Notes
\end_layout

\begin_deeper
\begin_layout Enumerate
(none)
\end_layout

\end_deeper
\begin_layout Subsubsection
user::getuid
\end_layout

\begin_layout Enumerate
Syntax
\end_layout

\begin_deeper
\begin_layout Enumerate

\family typewriter
user::getuid ?<username>?
\end_layout

\end_deeper
\begin_layout Enumerate
Arguments
\end_layout

\begin_deeper
\begin_layout Enumerate
username
\end_layout

\begin_deeper
\begin_layout Enumerate
This optional parameter specifies a username to return the UID for.
\end_layout

\end_deeper
\end_deeper
\begin_layout Enumerate
Return Value
\end_layout

\begin_deeper
\begin_layout Enumerate
If no username parameter is passed this function returns the UID of the
 current user; otherwise,
\end_layout

\begin_layout Enumerate
The UID is returned corresponding to the specified username;
\end_layout

\begin_layout Enumerate
On error 0 is returned.
\end_layout

\end_deeper
\begin_layout Enumerate
Notes
\end_layout

\begin_deeper
\begin_layout Enumerate
(none)
\end_layout

\end_deeper
\begin_layout Subsubsection
user::getnam
\end_layout

\begin_layout Enumerate
Syntax
\end_layout

\begin_deeper
\begin_layout Enumerate

\family typewriter
user::getnam <uid>
\end_layout

\end_deeper
\begin_layout Enumerate
Arguments
\end_layout

\begin_deeper
\begin_layout Enumerate
uid
\end_layout

\begin_deeper
\begin_layout Enumerate
UID to return username for.
\end_layout

\end_deeper
\end_deeper
\begin_layout Enumerate
Return Value
\end_layout

\begin_deeper
\begin_layout Enumerate
This function returns the username corresponding to the UID passed;
\end_layout

\begin_layout Enumerate
An empty string is returned on error.
\end_layout

\end_deeper
\begin_layout Enumerate
Notes
\end_layout

\begin_deeper
\begin_layout Enumerate
(none)
\end_layout

\end_deeper
\begin_layout Subsubsection
user::login
\end_layout

\begin_layout Enumerate
Syntax
\end_layout

\begin_deeper
\begin_layout Enumerate

\family typewriter
user::login <uid> <password> <source>
\end_layout

\end_deeper
\begin_layout Enumerate
Arguments
\end_layout

\begin_deeper
\begin_layout Enumerate
uid
\end_layout

\begin_deeper
\begin_layout Enumerate
UID to verify credentials for.
\end_layout

\end_deeper
\begin_layout Enumerate
password
\end_layout

\begin_deeper
\begin_layout Enumerate
Password to authenticate with.
\end_layout

\end_deeper
\begin_layout Enumerate
source
\end_layout

\begin_deeper
\begin_layout Enumerate
Source address to login from.
\end_layout

\end_deeper
\end_deeper
\begin_layout Enumerate
Return Value
\end_layout

\begin_deeper
\begin_layout Enumerate
On success 1 is returned, otherwise 0 is returned.
\end_layout

\end_deeper
\begin_layout Enumerate
Notes
\end_layout

\begin_deeper
\begin_layout Enumerate
(none)
\end_layout

\end_deeper
\begin_layout Subsubsection
user::create
\end_layout

\begin_layout Enumerate
Syntax
\end_layout

\begin_deeper
\begin_layout Enumerate

\family typewriter
user::create -user <username> ?-name <fullname>? ?-flags <flag_list>? ?-opts
 <opt_list>? ?-pass <password>?
\end_layout

\end_deeper
\begin_layout Enumerate
Arguments
\end_layout

\begin_deeper
\begin_layout Enumerate
-user <username>
\end_layout

\begin_deeper
\begin_layout Enumerate
This required parameter specifies the username for the newly created user.
 A user must not already exist with this username.
\end_layout

\end_deeper
\begin_layout Enumerate
-name <fullname>
\end_layout

\begin_deeper
\begin_layout Enumerate
This parameter specifies the fullname field for the newly created user.
\end_layout

\end_deeper
\begin_layout Enumerate
-flags <flag_list>
\end_layout

\begin_deeper
\begin_layout Enumerate
This parameter allows you to create the user with an initial list of flags.
\end_layout

\end_deeper
\begin_layout Enumerate
-opts <opt_list>
\end_layout

\begin_deeper
\begin_layout Enumerate
This parameter allows you to create the user with an initial list of options.
\end_layout

\begin_layout Enumerate
The opt_list parameter is a list of lists.
 Each inner list contains two elements:
\end_layout

\begin_deeper
\begin_layout Enumerate
field
\end_layout

\begin_layout Enumerate
value
\end_layout

\end_deeper
\end_deeper
\begin_layout Enumerate
-pass <password>
\end_layout

\begin_deeper
\begin_layout Enumerate
This optional parameter specifies the initial password to set to.
\end_layout

\begin_layout Enumerate
The password parameter is plain-text.
\end_layout

\begin_layout Enumerate
If this parameter is omitted the account is locked and no password will
 match it.
\end_layout

\end_deeper
\end_deeper
\begin_layout Enumerate
Return Value
\end_layout

\begin_deeper
\begin_layout Enumerate
On success the UID of the user created is returned;
\end_layout

\begin_layout Enumerate
0 is returned on failure to create a user.
\end_layout

\end_deeper
\begin_layout Enumerate
Notes
\end_layout

\begin_deeper
\begin_layout Enumerate
(none)
\end_layout

\end_deeper
\begin_layout Subsubsection
user::delete
\end_layout

\begin_layout Enumerate
Syntax
\end_layout

\begin_deeper
\begin_layout Enumerate

\family typewriter
user::delete <uid>
\end_layout

\end_deeper
\begin_layout Enumerate
Arguments
\end_layout

\begin_deeper
\begin_layout Enumerate
uid
\end_layout

\begin_deeper
\begin_layout Enumerate
The UID of the user to delete.
\end_layout

\end_deeper
\end_deeper
\begin_layout Enumerate
Return Value
\end_layout

\begin_deeper
\begin_layout Enumerate
On success 1 is returned, otherwise 0 is returned.
\end_layout

\end_deeper
\begin_layout Enumerate
Notes
\end_layout

\begin_deeper
\begin_layout Enumerate
(none)
\end_layout

\end_deeper
\begin_layout Subsubsection
user::change
\end_layout

\begin_layout Enumerate
Syntax
\end_layout

\begin_deeper
\begin_layout Enumerate

\family typewriter
user::change ?-uid <uid>? ?-user <username>? ?-name <fullname>? ?-flags
 <flag_list>? ?-opts <opt_list>? ?-pass <password>?
\end_layout

\end_deeper
\begin_layout Enumerate
Arguments
\end_layout

\begin_deeper
\begin_layout Enumerate
-uid <uid>
\end_layout

\begin_deeper
\begin_layout Enumerate
The UID parameter indicates the UID of the user to change.
\end_layout

\begin_layout Enumerate
If the UID parameter is omitted the current UID (as returned from 
\family typewriter
user::getuid
\family default
 is used.)
\end_layout

\end_deeper
\begin_layout Enumerate
-user <username>
\end_layout

\begin_deeper
\begin_layout Enumerate
The presence of this parameter indicates that the specified user's username
 should be changed to the value passed.
\end_layout

\begin_layout Enumerate
The username specified MUST NOT already be used by another user.
\end_layout

\end_deeper
\begin_layout Enumerate
-name <fullname>
\end_layout

\begin_deeper
\begin_layout Enumerate
The presence of this parameter indicates that the specified user's fullname
 should be changed to the value passed.
\end_layout

\end_deeper
\begin_layout Enumerate
-flags <flag_list>
\end_layout

\begin_layout Enumerate
-opts <opt_list>
\end_layout

\begin_layout Enumerate
-pass <password>
\end_layout

\begin_deeper
\begin_layout Enumerate
The presence of this parameter indicates that the specified user's password
 should be changed to the value passed.
\end_layout

\begin_layout Enumerate
If the password parameter is blank the account is locked and no password
 will be valid for it.
\end_layout

\begin_layout Enumerate
The password parameter should be the plain text password.
\end_layout

\end_deeper
\end_deeper
\begin_layout Enumerate
Return Value
\end_layout

\begin_deeper
\begin_layout Enumerate
On success 1 is returned, otherwise 0 is returned.
\end_layout

\end_deeper
\begin_layout Enumerate
Notes
\end_layout

\begin_deeper
\begin_layout Enumerate
Privileges:
\end_layout

\begin_deeper
\begin_layout Enumerate
Admin
\end_layout

\begin_layout Enumerate
Root
\end_layout

\end_deeper
\end_deeper
\begin_layout Subsubsection
user::get
\end_layout

\begin_layout Enumerate
Syntax
\end_layout

\begin_deeper
\begin_layout Enumerate

\family typewriter
user::get ?-uid {<uid>|ALL}? ?-user? ?-name? ?-flags? ?-opts? ?-uids? ?-pass?
 ?-field <field>? ?-fields <field_list>?
\end_layout

\end_deeper
\begin_layout Enumerate
Arguments
\end_layout

\begin_deeper
\begin_layout Enumerate
-uid {<uid>|ALL}
\end_layout

\begin_deeper
\begin_layout Enumerate
This parameter specifies the UID for which to return information on.
\end_layout

\begin_layout Enumerate
If this parameter is omitted the current UID (as returned from 
\family typewriter
user::getuid
\family default
) is used.
\end_layout

\begin_layout Enumerate
If the value passed to the parameter is 
\begin_inset Quotes eld
\end_inset

ALL
\begin_inset Quotes erd
\end_inset

 instead of a UID, this function returns a list whose elements correspond
 to a single user.
\end_layout

\end_deeper
\begin_layout Enumerate
-user
\end_layout

\begin_deeper
\begin_layout Enumerate
The presence of this parameter indicates that the user's username should
 be returned.
\end_layout

\end_deeper
\begin_layout Enumerate
-name
\end_layout

\begin_deeper
\begin_layout Enumerate
The presence of this parameter indicates that the user's fullname should
 be returned.
\end_layout

\end_deeper
\begin_layout Enumerate
-flags
\end_layout

\begin_deeper
\begin_layout Enumerate
The presence of this parameter indicates that a list containing the user's
 flags should be returned.
\end_layout

\end_deeper
\begin_layout Enumerate
-opts
\end_layout

\begin_deeper
\begin_layout Enumerate
The presence of this parameter indicates that a list containing a list of
 the user's options should be returned.
\end_layout

\end_deeper
\begin_layout Enumerate
-uids
\end_layout

\begin_deeper
\begin_layout Enumerate
The presence of this parameter indicates that the user's UID should be returned
\end_layout

\end_deeper
\begin_layout Enumerate
-pass
\end_layout

\begin_deeper
\begin_layout Enumerate
The presence of this parameter indicates that the user's encrypted password
 should be returned.
\end_layout

\end_deeper
\begin_layout Enumerate
-field <field>
\end_layout

\begin_deeper
\begin_layout Enumerate
This parameter indicates that the field specified by the value passed should
 be returned, valid values are:
\end_layout

\begin_deeper
\begin_layout Enumerate
uid
\end_layout

\begin_layout Enumerate
user
\end_layout

\begin_layout Enumerate
name
\end_layout

\begin_layout Enumerate
flags
\end_layout

\begin_layout Enumerate
opts
\end_layout

\begin_layout Enumerate
pass
\end_layout

\end_deeper
\begin_layout Enumerate
This is proper way to request a variable single field name.
\end_layout

\end_deeper
\begin_layout Enumerate
-fields <field_list>
\end_layout

\begin_deeper
\begin_layout Enumerate
This parameter indicates that the fields specified in the value passed should
 be returned.
\end_layout

\begin_layout Enumerate
This is the proper way to request multiple variable field names.
\end_layout

\end_deeper
\end_deeper
\begin_layout Enumerate
Return Value
\end_layout

\begin_deeper
\begin_layout Enumerate
This function returns the request field or fields for the specified user
 or all users;
\end_layout

\begin_layout Enumerate
This may be a string or list depending on what is requested:
\end_layout

\begin_deeper
\begin_layout Enumerate
A single string is returned IF:
\end_layout

\begin_deeper
\begin_layout Enumerate
The specified UID is NOT 
\begin_inset Quotes eld
\end_inset

ALL
\begin_inset Quotes erd
\end_inset

; and
\end_layout

\begin_layout Enumerate
A single field is requested; and
\end_layout

\begin_layout Enumerate
The 
\begin_inset Quotes eld
\end_inset

-fields
\begin_inset Quotes erd
\end_inset

 parameter is not passed.
\end_layout

\end_deeper
\begin_layout Enumerate
A list of strings (one per item) is returned IF:
\end_layout

\begin_deeper
\begin_layout Enumerate
The specified UID is NOT 
\begin_inset Quotes eld
\end_inset

ALL
\begin_inset Quotes erd
\end_inset

; and
\end_layout

\begin_layout Enumerate
Multiple fields are requested; or
\end_layout

\begin_layout Enumerate
The 
\begin_inset Quotes eld
\end_inset

-fields
\begin_inset Quotes erd
\end_inset

 parameter is passed.
\end_layout

\end_deeper
\begin_layout Enumerate
A list of strings (one per user) is returned IF:
\end_layout

\begin_deeper
\begin_layout Enumerate
The specified UID is 
\begin_inset Quotes eld
\end_inset

ALL
\begin_inset Quotes erd
\end_inset

; and
\end_layout

\begin_layout Enumerate
A single field is requested; and
\end_layout

\begin_layout Enumerate
The 
\begin_inset Quotes eld
\end_inset

-fields
\begin_inset Quotes erd
\end_inset

 parameter is not passed.
\end_layout

\end_deeper
\begin_layout Enumerate
A list of lists is returned IF:
\end_layout

\begin_deeper
\begin_layout Enumerate
The specified UID is 
\begin_inset Quotes eld
\end_inset

ALL
\begin_inset Quotes erd
\end_inset

; and
\end_layout

\begin_layout Enumerate
Multiple fields are requested; or
\end_layout

\begin_layout Enumerate
The 
\begin_inset Quotes eld
\end_inset

-fields
\begin_inset Quotes erd
\end_inset

 parameter is passed.
\end_layout

\end_deeper
\end_deeper
\end_deeper
\begin_layout Enumerate
Notes
\end_layout

\begin_deeper
\begin_layout Enumerate
The fields requested will be in the same order in which they are requested;
\end_layout

\begin_layout Enumerate
Mixing usage of the 
\begin_inset Quotes eld
\end_inset

-field
\begin_inset Quotes erd
\end_inset

 and 
\begin_inset Quotes eld
\end_inset

-fields
\begin_inset Quotes erd
\end_inset

 parameters in a single command is prohibited.
\end_layout

\end_deeper
\begin_layout Subsubsection
user::setflag
\end_layout

\begin_layout Enumerate
Syntax
\end_layout

\begin_deeper
\begin_layout Enumerate

\family typewriter
user::setflag <newflags> ?<uid>?
\end_layout

\end_deeper
\begin_layout Enumerate
Arguments
\end_layout

\begin_deeper
\begin_layout Enumerate
newflags
\end_layout

\begin_deeper
\begin_layout Enumerate
This parameter is a list of flags which should be set for this function
 to return successfully.
\end_layout

\end_deeper
\begin_layout Enumerate
uid
\end_layout

\begin_deeper
\begin_layout Enumerate
This optional parameter indicates the UID of the user to modify.
\end_layout

\begin_layout Enumerate
If this parameter is omitted the current user's UID (as returned by 
\family typewriter
user::getuid
\family default
) is used.
\end_layout

\end_deeper
\end_deeper
\begin_layout Enumerate
Return Value
\end_layout

\begin_deeper
\begin_layout Enumerate
On success 1 is returned, otherwise 0 is returned.
\end_layout

\end_deeper
\begin_layout Enumerate
Notes
\end_layout

\begin_deeper
\begin_layout Enumerate
Privileges:
\end_layout

\begin_deeper
\begin_layout Enumerate
Admin
\end_layout

\begin_layout Enumerate
Root
\end_layout

\end_deeper
\end_deeper
\begin_layout Subsubsection
user::hasflag
\end_layout

\begin_layout Enumerate
Syntax
\end_layout

\begin_deeper
\begin_layout Enumerate

\family typewriter
user::hasflag <flags> ?<uid>?
\end_layout

\end_deeper
\begin_layout Enumerate
Arguments
\end_layout

\begin_deeper
\begin_layout Enumerate
flags
\end_layout

\begin_deeper
\begin_layout Enumerate
This parameter contains a list of flags to compare against the specified
 user's flags.
\end_layout

\end_deeper
\begin_layout Enumerate
uid
\end_layout

\begin_deeper
\begin_layout Enumerate
This optional parameter indicates the UID of the user to check.
\end_layout

\begin_layout Enumerate
If this parameter is omitted the current user's UID (as returned by 
\family typewriter
user::getuid
\family default
) is used.
\end_layout

\end_deeper
\end_deeper
\begin_layout Enumerate
Return Value
\end_layout

\begin_deeper
\begin_layout Enumerate
On success 1 is returned, otherwise 0 is returned.
\end_layout

\end_deeper
\begin_layout Enumerate
Notes
\end_layout

\begin_deeper
\begin_layout Enumerate
(none)
\end_layout

\end_deeper
\begin_layout Subsubsection
user::unsetflag
\end_layout

\begin_layout Enumerate
Syntax
\end_layout

\begin_deeper
\begin_layout Enumerate

\family typewriter
user::unsetflag <flags> ?<uid>?
\end_layout

\end_deeper
\begin_layout Enumerate
Arguments
\end_layout

\begin_deeper
\begin_layout Enumerate
flags
\end_layout

\begin_layout Enumerate
uid
\end_layout

\end_deeper
\begin_layout Enumerate
Return Value
\end_layout

\begin_deeper
\begin_layout Enumerate
On success 1 is returned, otherwise 0 is returned.
\end_layout

\end_deeper
\begin_layout Enumerate
Notes
\end_layout

\begin_deeper
\begin_layout Enumerate
(none)
\end_layout

\end_deeper
\begin_layout Subsubsection
user::setopt
\end_layout

\begin_layout Enumerate
Syntax
\end_layout

\begin_deeper
\begin_layout Enumerate

\family typewriter
user::setopt <optname> <optvalue> ?<uid>?
\end_layout

\end_deeper
\begin_layout Enumerate
Arguments
\end_layout

\begin_deeper
\begin_layout Enumerate
optname
\end_layout

\begin_layout Enumerate
optvalue
\end_layout

\begin_layout Enumerate
uid
\end_layout

\end_deeper
\begin_layout Enumerate
Return Value
\end_layout

\begin_deeper
\begin_layout Enumerate
On success 1 is returned, otherwise 0 is returned.
\end_layout

\end_deeper
\begin_layout Enumerate
Notes
\end_layout

\begin_deeper
\begin_layout Enumerate
(none)
\end_layout

\end_deeper
\begin_layout Subsubsection
user::getopt
\end_layout

\begin_layout Enumerate
Syntax
\end_layout

\begin_deeper
\begin_layout Enumerate

\family typewriter
user::getopt <optname> ?<uid>?
\end_layout

\end_deeper
\begin_layout Enumerate
Arguments
\end_layout

\begin_deeper
\begin_layout Enumerate
optname
\end_layout

\begin_layout Enumerate
uid
\end_layout

\end_deeper
\begin_layout Enumerate
Return Value
\end_layout

\begin_deeper
\begin_layout Enumerate
A string containing the value of the specified option for the specified
 user;
\end_layout

\begin_layout Enumerate
If no such value could be found an empty string is returned.
\end_layout

\end_deeper
\begin_layout Enumerate
Notes
\end_layout

\begin_deeper
\begin_layout Enumerate
(none)
\end_layout

\end_deeper
\begin_layout Subsubsection
user::listopt
\end_layout

\begin_layout Enumerate
Syntax
\end_layout

\begin_deeper
\begin_layout Enumerate

\family typewriter
user::listopt <opt> ?<value>?
\end_layout

\end_deeper
\begin_layout Enumerate
Arguments
\end_layout

\begin_deeper
\begin_layout Enumerate
opt
\end_layout

\begin_layout Enumerate
value
\end_layout

\end_deeper
\begin_layout Enumerate
Return Value
\end_layout

\begin_deeper
\begin_layout Enumerate
This function returns a list of UIDs which correspond to users who have
 the option 
\begin_inset Quotes eld
\end_inset

opt
\begin_inset Quotes erd
\end_inset

 and have it set to the value of 
\begin_inset Quotes eld
\end_inset

value
\begin_inset Quotes erd
\end_inset

 if the value parameter is passed.
\end_layout

\end_deeper
\begin_layout Enumerate
Notes
\end_layout

\begin_deeper
\begin_layout Enumerate
(none)
\end_layout

\end_deeper
\begin_layout Subsubsection
user::listflag
\end_layout

\begin_layout Enumerate
Syntax
\end_layout

\begin_deeper
\begin_layout Enumerate

\family typewriter
user::listflag <flag>
\end_layout

\end_deeper
\begin_layout Enumerate
Arguments
\end_layout

\begin_deeper
\begin_layout Enumerate
flag
\end_layout

\end_deeper
\begin_layout Enumerate
Return Value
\end_layout

\begin_deeper
\begin_layout Enumerate
This function returns a list of UIDs corresponding to users who have the
 specified flag set;
\end_layout

\begin_layout Enumerate
An empty list indicates that no such users could be found.
\end_layout

\end_deeper
\begin_layout Enumerate
Notes
\end_layout

\begin_deeper
\begin_layout Enumerate
(none)
\end_layout

\end_deeper
\begin_layout Subsubsection
user::flaglist
\end_layout

\begin_layout Enumerate
Syntax
\end_layout

\begin_deeper
\begin_layout Enumerate

\family typewriter
user::flaglist
\end_layout

\end_deeper
\begin_layout Enumerate
Arguments
\end_layout

\begin_deeper
\begin_layout Enumerate
(none)
\end_layout

\end_deeper
\begin_layout Enumerate
Return Value
\end_layout

\begin_deeper
\begin_layout Enumerate
This function returns a list of all acceptable flags.
\end_layout

\end_deeper
\begin_layout Enumerate
Notes
\end_layout

\begin_deeper
\begin_layout Enumerate
(none)
\end_layout

\end_deeper
\begin_layout Subsubsection
user::setuid
\end_layout

\begin_layout Enumerate
Syntax
\end_layout

\begin_deeper
\begin_layout Enumerate

\family typewriter
user::setuid <uid>
\end_layout

\end_deeper
\begin_layout Enumerate
Arguments
\end_layout

\begin_deeper
\begin_layout Enumerate
uid
\end_layout

\begin_deeper
\begin_layout Enumerate
This parameter indicates the UID to change to.
\end_layout

\end_deeper
\end_deeper
\begin_layout Enumerate
Return Value
\end_layout

\begin_deeper
\begin_layout Enumerate
On success 1 is returned, otherwise 0 is returned.
\end_layout

\end_deeper
\begin_layout Enumerate
Notes
\end_layout

\begin_deeper
\begin_layout Enumerate
If the UID has already been set and the current user lacks the 
\begin_inset Quotes eld
\end_inset

root
\begin_inset Quotes erd
\end_inset

 flag this call will fail;
\end_layout

\begin_layout Enumerate
The 
\family typewriter
user::login
\family default
 function sets the current user.
\end_layout

\end_deeper
\begin_layout Section
Session
\end_layout

\begin_layout Subsection
Overview
\end_layout

\begin_layout Subsection
Functions
\end_layout

\begin_layout Subsubsection
session::create
\end_layout

\begin_layout Subsubsection
session::destroy
\end_layout

\begin_layout Subsubsection
session::load
\end_layout

\begin_layout Subsubsection
session::save
\end_layout

\begin_layout Section
Module
\end_layout

\begin_layout Subsection
Overview
\end_layout

\begin_layout Subsection
Functions
\end_layout

\begin_layout Subsubsection
module::register
\end_layout

\begin_layout Subsubsection
module::list
\end_layout

\begin_layout Subsubsection
module::info
\end_layout

\begin_layout Subsubsection
module::unregister
\end_layout

\begin_layout Section
UUID
\end_layout

\begin_layout Subsection
Overview
\end_layout

\begin_layout Subsection
Functions
\end_layout

\begin_layout Subsubsection
wa_uuid::gen
\end_layout

\begin_layout Enumerate
Syntax
\end_layout

\begin_deeper
\begin_layout Enumerate

\family typewriter
wa_uuid::gen ?<prefix>?
\end_layout

\end_deeper
\begin_layout Enumerate
Arguments
\end_layout

\begin_deeper
\begin_layout Enumerate
prefix
\end_layout

\begin_deeper
\begin_layout Enumerate
This optional parameter indicates the numeric or symbolic prefix to generate
 the UUID in.
\end_layout

\end_deeper
\end_deeper
\begin_layout Enumerate
Return Value
\end_layout

\begin_deeper
\begin_layout Enumerate
This function returns a 
\emph on
Universally Unique IDentifier
\emph default
;
\end_layout

\begin_layout Enumerate
If the prefix is omitted, 0 is used.
\end_layout

\begin_layout Enumerate
On error the invalid UUID of 0 is returned.
\end_layout

\end_deeper
\begin_layout Enumerate
Notes
\end_layout

\begin_deeper
\begin_layout Enumerate
(none)
\end_layout

\end_deeper
\begin_layout Subsubsection
wa_uuid::register
\end_layout

\begin_layout Enumerate
Syntax
\end_layout

\begin_deeper
\begin_layout Enumerate

\family typewriter
wa_uuid::register <prefix> <type> ?<module>?
\end_layout

\end_deeper
\begin_layout Enumerate
Arguments
\end_layout

\begin_deeper
\begin_layout Enumerate
prefix
\end_layout

\begin_layout Enumerate
type
\end_layout

\begin_layout Enumerate
module
\end_layout

\end_deeper
\begin_layout Enumerate
Return Value
\end_layout

\begin_deeper
\begin_layout Enumerate
On success 1 is returned, otherwise 0 is returned.
\end_layout

\end_deeper
\begin_layout Enumerate
Notes
\end_layout

\begin_deeper
\begin_layout Enumerate
(none)
\end_layout

\end_deeper
\begin_layout Subsubsection
wa_uuid::type
\end_layout

\begin_layout Enumerate
Syntax
\end_layout

\begin_deeper
\begin_layout Enumerate

\family typewriter
wa_uuid::type <uuid>
\end_layout

\end_deeper
\begin_layout Enumerate
Arguments
\end_layout

\begin_deeper
\begin_layout Enumerate
uuid
\end_layout

\end_deeper
\begin_layout Enumerate
Return Value
\end_layout

\begin_deeper
\begin_layout Enumerate
This function returns the previously register symbolic name associated with
 the specified UUID's prefix;
\end_layout

\begin_layout Enumerate
If no such symbolic name could be found the string 
\begin_inset Quotes eld
\end_inset

unknown
\begin_inset Quotes erd
\end_inset

 is returned.
\end_layout

\end_deeper
\begin_layout Enumerate
Notes
\end_layout

\begin_deeper
\begin_layout Enumerate
(none)
\end_layout

\end_deeper
\begin_layout Section
Notes
\end_layout

\begin_layout Subsection
Overview
\end_layout

\begin_layout Subsection
Functions
\end_layout

\begin_layout Subsubsection
note::send
\end_layout

\begin_layout Subsubsection
note::list
\end_layout

\begin_layout Subsubsection
note::delete
\end_layout

\begin_layout Subsubsection
note::foldercreate
\end_layout

\begin_layout Subsubsection
note::folderlist
\end_layout

\begin_layout Subsubsection
note::folderdelete
\end_layout

\begin_layout Subsubsection
note::folderrename
\end_layout

\begin_layout Subsubsection
note::copy
\end_layout

\begin_layout Section
Workorders
\end_layout

\begin_layout Subsection
Not yet implemented.
\end_layout

\begin_layout Section
Hooks
\end_layout

\begin_layout Subsection
Functions
\end_layout

\begin_layout Subsubsection
hook::register
\end_layout

\begin_layout Enumerate
Syntax
\end_layout

\begin_deeper
\begin_layout Enumerate

\family typewriter
hook::register <id> <callback>
\end_layout

\end_deeper
\begin_layout Enumerate
Arguments
\end_layout

\begin_deeper
\begin_layout Enumerate
id
\end_layout

\begin_deeper
\begin_layout Enumerate
Identifier which will trigger callback mechanism.
\end_layout

\begin_layout Enumerate
This may be a wild-card.
\end_layout

\end_deeper
\begin_layout Enumerate
callback
\end_layout

\begin_deeper
\begin_layout Enumerate
Function to be called.
\end_layout

\end_deeper
\end_deeper
\begin_layout Enumerate
Return Value
\end_layout

\begin_deeper
\begin_layout Enumerate
This function returns 1 on success, 0 otherwise.
\end_layout

\end_deeper
\begin_layout Enumerate
Notes
\end_layout

\begin_deeper
\begin_layout Enumerate
The callback function should accept three arguments:
\end_layout

\begin_deeper
\begin_layout Enumerate
Actual Identifier
\end_layout

\begin_layout Enumerate
Registered Identifier
\end_layout

\begin_layout Enumerate
Argument List
\end_layout

\end_deeper
\end_deeper
\begin_layout Subsubsection
hook::call
\end_layout

\begin_layout Enumerate
Syntax
\end_layout

\begin_deeper
\begin_layout Enumerate

\family typewriter
hook::call <id> parameters ...
\end_layout

\end_deeper
\begin_layout Enumerate
Arguments
\end_layout

\begin_deeper
\begin_layout Enumerate
id
\end_layout

\begin_deeper
\begin_layout Enumerate
Identifier for which to invoke callbacks for.
\end_layout

\end_deeper
\begin_layout Enumerate
parameters ...
\end_layout

\begin_deeper
\begin_layout Enumerate
Parameters list to pass as the third argument to any callback functions.
\end_layout

\end_deeper
\end_deeper
\begin_layout Enumerate
Return Value
\end_layout

\begin_deeper
\begin_layout Enumerate
This function returns the number of callback functions which successfully
 handled this event.
\end_layout

\end_deeper
\begin_layout Enumerate
Notes
\end_layout

\begin_deeper
\begin_layout Enumerate
(none)
\end_layout

\end_deeper
\begin_layout Subsubsection
hook::unregister
\end_layout

\begin_layout Enumerate
Syntax
\end_layout

\begin_deeper
\begin_layout Enumerate

\family typewriter
hook::unregister ?<id>? ?<callback>?
\end_layout

\end_deeper
\begin_layout Enumerate
Arguments
\end_layout

\begin_deeper
\begin_layout Enumerate
id
\end_layout

\begin_deeper
\begin_layout Enumerate
Identifier for which to unregister callbacks for.
\end_layout

\begin_layout Enumerate
If this parameter is an empty string or omitted, all identifiers are considered
 for removal.
\end_layout

\end_deeper
\begin_layout Enumerate
callback
\end_layout

\begin_deeper
\begin_layout Enumerate
Callback function which to remove from list of registered callbacks.
\end_layout

\begin_layout Enumerate
If this parameter is an empty string or omitted, all callbacks are considered
 for removal.
\end_layout

\end_deeper
\end_deeper
\begin_layout Enumerate
Return Value
\end_layout

\begin_deeper
\begin_layout Enumerate
This function returns 1 on success, 0 otherwise.
\end_layout

\end_deeper
\begin_layout Enumerate
Notes
\end_layout

\begin_deeper
\begin_layout Enumerate
With no arguments all callbacks for all identifiers are removed.
\end_layout

\end_deeper
\begin_layout Section
Files
\end_layout

\begin_layout Subsection
Overview
\end_layout

\begin_layout Subsection
Functions
\end_layout

\begin_layout Subsubsection
file::create
\end_layout

\begin_layout Subsubsection
file::list
\end_layout

\begin_layout Subsubsection
file::delete
\end_layout

\begin_layout Subsubsection
file::rename
\end_layout

\begin_layout Subsubsection
file::get
\end_layout

\begin_layout Subsubsection
file::give
\end_layout

\begin_layout Subsubsection
file::take
\end_layout

\begin_layout Subsubsection
file::readable
\end_layout

\begin_layout Subsubsection
file::writable
\end_layout

\begin_layout Subsubsection
file::gets
\end_layout

\begin_layout Subsubsection
file::puts
\end_layout

\begin_layout Section
Calendar
\end_layout

\begin_layout Subsection
Overview
\end_layout

\begin_layout Subsection
Functions
\end_layout

\begin_layout Subsubsection
calendar::create
\end_layout

\begin_layout Enumerate
Syntax
\end_layout

\begin_layout Enumerate
Arguments
\end_layout

\begin_layout Enumerate
Return Value
\end_layout

\begin_layout Enumerate
Notes
\end_layout

\begin_layout Subsubsection
calendar::change
\end_layout

\begin_layout Subsubsection
calendar::get
\end_layout

\begin_layout Subsubsection
calendar::generate
\end_layout

\begin_layout Subsubsection
calendar::entry
\end_layout

\begin_layout Section
Help
\end_layout

\begin_layout Subsection
Overview
\end_layout

\begin_layout Subsection
Functions
\end_layout

\begin_layout Subsubsection
help::get
\end_layout

\begin_layout Enumerate
Syntax
\end_layout

\begin_deeper
\begin_layout Enumerate

\family typewriter
help::get <topic>
\end_layout

\end_deeper
\begin_layout Enumerate
Arguments
\end_layout

\begin_deeper
\begin_layout Enumerate
topic
\end_layout

\begin_deeper
\begin_layout Enumerate
Topic to retrieve help information for.
\end_layout

\end_deeper
\end_deeper
\begin_layout Enumerate
Return Value
\end_layout

\begin_deeper
\begin_layout Enumerate
This function returns a string representing the last entered help information
 for the specified topic.
\end_layout

\end_deeper
\begin_layout Enumerate
Notes
\end_layout

\begin_deeper
\begin_layout Enumerate
(none)
\end_layout

\end_deeper
\begin_layout Subsubsection
help::set
\end_layout

\begin_layout Subsubsection
help::addcomment
\end_layout

\begin_layout Subsubsection
help::removecomment
\end_layout

\begin_layout Subsubsection
help::getcomments
\end_layout

\begin_layout Chapter
\start_of_appendix
Terminology
\end_layout

\begin_layout Section
Definitions
\end_layout

\begin_layout Subsection
Persistent
\end_layout

\begin_layout Subsection
Non-Persistent
\end_layout

\begin_layout Chapter
Support
\end_layout

\begin_layout Section
Support Information
\end_layout

\begin_layout Subsection
Contact
\end_layout

\begin_layout Enumerate
web: 
\family typewriter
http://www.keene-enterprises.com/
\end_layout

\begin_layout Enumerate
email: 
\family typewriter
support@keene-enterprises.com
\end_layout

\begin_layout Enumerate

\end_layout

\begin_layout Subsection
License Information
\end_layout

\begin_layout Enumerate
Site Name:
\end_layout

\begin_layout Enumerate
Site License Number:
\end_layout

\begin_layout Enumerate
Site License Key:
\end_layout

\begin_layout Chapter
License
\end_layout

\begin_layout Standard
Copyright (c) 2004, 2005, 2006, 2007, 2008, 2009
\noun on
Keene Enterprises
\end_layout

\begin_layout Standard
Permission is hereby granted, free of charge, to any person obtaining a
 copy of this software and associated documentation files (the "Software"),
 to deal in the Software without restriction, including without limitation
 the rights to use, copy, modify, merge, publish, distribute, sub-license,
 and/or sell copies of the Software, and to permit persons to whom the Software
 is furnished to do so, subject to the following conditions:
\end_layout

\begin_layout Itemize
The above copyright notice and this permission notice shall be included
 in all copies or substantial portions of the Software.
\end_layout

\begin_layout Standard
THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
 OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT.
 IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
 DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE
, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR
 OTHER DEALINGS IN THE SOFTWARE.
\end_layout

\end_body
\end_document
