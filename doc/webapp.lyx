#LyX 1.3 created this file. For more info see http://www.lyx.org/
\lyxformat 221
\textclass book
\language english
\inputencoding auto
\fontscheme default
\graphics default
\paperfontsize default
\spacing single 
\papersize letterpaper
\paperpackage a4
\use_geometry 0
\use_amsmath 0
\use_natbib 0
\use_numerical_citations 0
\paperorientation portrait
\secnumdepth 3
\tocdepth 3
\paragraph_separation indent
\defskip medskip
\quotes_language english
\quotes_times 2
\papercolumns 1
\papersides 1
\paperpagestyle default

\layout Title

SchoolWeb Application Framework: Developers Manual
\layout Author

Keene Enterprises
\layout Date

01 January 2005
\layout Standard


\begin_inset LatexCommand \tableofcontents{}

\end_inset 


\layout Chapter

Introduction
\layout Standard

Welcome to the SchoolWeb Application Framework Developers Manual.
\layout Section

Scope of This Document
\layout Standard

This document is intended for software developers or advanced system administrat
ors who wish to modify or enhance the functionality of the SchoolWeb Application
 Framework.
\layout Standard

System administrators interested in configuration details should consult
 the SchoolWeb Application Framework User's Guide.
\layout Section

System Requirements
\layout Standard

The SchoolWeb Application Framework uses 
\begin_inset Quotes eld
\end_inset 

mod_rivet
\begin_inset Quotes erd
\end_inset 

 and the Apache Software Foundation's 
\begin_inset Quotes eld
\end_inset 

httpd
\begin_inset Quotes erd
\end_inset 

 webserver.
\layout Subsection

Apache
\layout Standard

Apache version 1.3.29 or greater is required.
\layout Subsection

mod_rivet
\layout Standard

mod_rivet version 0.4.1 or greater is required.
\layout Chapter

Flow of Control
\layout Section

Initialization
\layout Section

Persistent versus Non-persistent
\layout Chapter

Modules
\layout Section

User Administration
\layout Section

Notes
\layout Section

Workorder Viewer
\layout Section

Workorder Placement
\layout Section

Lesson Plans
\layout Section

Calendar
\layout Section

Homepages
\layout Section

School Pages
\layout Chapter

Packages
\layout Section

Database
\layout Subsection

db::create
\layout Subsubsection

Syntax
\layout Enumerate


\family typewriter 
db::create -dbname <dbname> -fields <fields_list>
\layout Subsubsection

Arguments
\layout Enumerate

-dbname <dbname>
\begin_deeper 
\begin_deeper 
\layout Enumerate

This required parameter specifies the name of the database to create.
\end_deeper 
\end_deeper 
\layout Enumerate

-fields <field_list>
\begin_deeper 
\begin_deeper 
\layout Enumerate

This required parameter specifies the list of fields.
\layout Enumerate

Any element in the list may contain a colon (:) followed by any of the following
:
\begin_deeper 
\layout Enumerate

pk (Primary Key)
\layout Enumerate

u (Unique)
\end_deeper 
\end_deeper 
\end_deeper 
\layout Subsubsection

Return Value
\layout Enumerate

This function returns 1 on success, 0 otherwise
\layout Enumerate

An error may be returned if the database backend could not be opened.
\layout Subsubsection

Notes
\layout Enumerate

(none)
\layout Subsection

db::set
\layout Subsubsection

Syntax
\layout Enumerate


\family typewriter 
db::set -dbname <dbname> -field <fieldname> <fieldvalue> ?-where <expression>?
\layout Subsubsection

Arguments
\layout Enumerate

-dbname <dbname>
\layout Enumerate

-field <fieldname> <fieldvalue>
\layout Enumerate

-where <expression>
\layout Subsubsection

Return Value
\layout Enumerate

This function returns 1 on success, 0 otherwise.
\layout Enumerate

An error may be returned if the database backend could not be initialized.
\layout Subsubsection

Notes
\layout Enumerate

(none)
\layout Subsection

db::unset
\layout Subsubsection

Syntax
\layout Enumerate


\family typewriter 
db::unset -dbname <dbname> -where <expression> ?-fields <field_list>?
\layout Subsubsection

Arguments
\layout Enumerate

-dbname <dbname>
\layout Enumerate

-where <expression>
\layout Enumerate

-fields <field_list>
\layout Subsubsection

Return Value
\layout Enumerate

This function returns 1 on success, 0 otherwise.
\layout Enumerate

An error may be returned if the database backend could not be initalized.
\layout Subsubsection

Notes
\layout Enumerate

(none)
\layout Subsection

db::get
\layout Subsubsection

Syntax
\layout Enumerate


\family typewriter 
db::get -dbname <dbname> ?-fields <field_list>? ?-where <expression>? ?-field
 <field>?
\layout Subsubsection

Arguments
\layout Enumerate

-dbname <dbname>
\layout Enumerate

-fields <field_list>
\layout Enumerate

-where <expression>
\layout Enumerate

-field <field>
\layout Subsubsection

Return Value
\layout Enumerate

This function returns a list or single value depending on the parameters
 passed.
\layout Enumerate

If the 
\begin_inset Quotes eld
\end_inset 

-fields
\begin_inset Quotes erd
\end_inset 

 parameter is not passed and only one 
\begin_inset Quotes eld
\end_inset 

-field
\begin_inset Quotes erd
\end_inset 

 parameter is passed then this funtion returns a single value (unless the
 
\begin_inset Quotes eld
\end_inset 

-where
\begin_inset Quotes erd
\end_inset 

 parameter is not passed).
\layout Enumerate

If the 
\begin_inset Quotes eld
\end_inset 

-fields
\begin_inset Quotes erd
\end_inset 

 parameter is passed or more than one 
\begin_inset Quotes eld
\end_inset 

-field
\begin_inset Quotes erd
\end_inset 

 parameter is passed then this function returns a list of the values for
 the specified fields (unless the 
\begin_inset Quotes eld
\end_inset 

-where
\begin_inset Quotes erd
\end_inset 

 parameter is not passed, then a list of lists is returned).
\layout Enumerate

If the 
\begin_inset Quotes eld
\end_inset 

-where
\begin_inset Quotes erd
\end_inset 

 parameter is not passed, a list of whatever would normally be returned
 is returned each outer element refers to a single row in the database.
\layout Subsubsection

Notes
\layout Enumerate

(none)
\layout Subsection

db::fields
\layout Subsubsection

Syntax
\layout Enumerate


\family typewriter 
db::fields -dbname <dbname>
\layout Subsubsection

Arguments
\layout Enumerate

-dbname <dbname>
\layout Subsubsection

Return Value
\layout Enumerate

This function returns a list of fields that a given database was created
 with.
\layout Subsubsection

Notes
\layout Enumerate

(none)
\layout Section

User
\layout Subsection

user::exists
\layout Subsubsection

Syntax
\layout Enumerate


\family typewriter 
user::exists <uid>
\layout Subsubsection

Arguments
\layout Enumerate

uid
\begin_deeper 
\begin_deeper 
\layout Enumerate

The user ID to check for existance.
\end_deeper 
\end_deeper 
\layout Subsubsection

Return Value
\layout Enumerate

This function returns 1 if the UID exists in the user database.
 0 if there is no such user or if the UID is invalid.
\layout Enumerate

An error may be returned if the database system fails.
\layout Subsubsection

Notes
\layout Enumerate

(none)
\layout Subsection

user::getuid
\layout Subsubsection

Syntax
\layout Enumerate


\family typewriter 
user::getuid ?username?
\layout Subsubsection

Arguments
\layout Enumerate

username
\begin_deeper 
\begin_deeper 
\layout Enumerate

This optional parameter specifies a username to return the UID for.
\end_deeper 
\end_deeper 
\layout Subsubsection

Return Value
\layout Enumerate

If no username parameter is passed this function returns the UID of the
 current user; otherwise,
\layout Enumerate

The UID is returned cooresponding to the specified username;
\layout Enumerate

On error 0 is returned.
\layout Subsubsection

Notes
\layout Enumerate

(none)
\layout Subsection

user::getnam
\layout Subsubsection

Syntax
\layout Enumerate


\family typewriter 
user::getnam <uid>
\layout Subsubsection

Arguments
\layout Enumerate

uid
\begin_deeper 
\begin_deeper 
\layout Enumerate

UID to return username for.
\end_deeper 
\end_deeper 
\layout Subsubsection

Return Value
\layout Enumerate

This function returns the username cooresponding to the UID passed;
\begin_deeper 
\layout Enumerate

An empty string is returned on error.
\end_deeper 
\layout Subsubsection

Notes
\layout Enumerate

(none)
\layout Subsection

user::login
\layout Subsubsection

Syntax
\layout Enumerate


\family typewriter 
user::login <uid> <password> <source>
\layout Subsubsection

Arguments
\layout Enumerate

uid
\begin_deeper 
\begin_deeper 
\layout Enumerate

UID to verify credentials for.
\end_deeper 
\end_deeper 
\layout Enumerate

password
\begin_deeper 
\begin_deeper 
\layout Enumerate

Password to authenticate with.
\end_deeper 
\end_deeper 
\layout Enumerate

source
\begin_deeper 
\begin_deeper 
\layout Enumerate

Source address to login from.
\end_deeper 
\end_deeper 
\layout Subsubsection

Return Value
\layout Enumerate

On success 1 is reurned, otherwise 0 is returned.
\layout Subsubsection

Notes
\layout Enumerate

(none)
\layout Subsection

user::create
\layout Subsubsection

Syntax
\layout Enumerate


\family typewriter 
user::create -user <username> ?-name <fullname>? ?-flags <flag_list>? ?-opts
 <opt_list>? ?-pass <password>?
\layout Subsubsection

Arguments
\layout Enumerate

-user <username>
\begin_deeper 
\begin_deeper 
\layout Enumerate

This required parameter specifies the username for the newly created user.
 A user must not already exist with this username.
\end_deeper 
\end_deeper 
\layout Enumerate

-name <fullname>
\begin_deeper 
\begin_deeper 
\layout Enumerate

This parameter specifies the fullname field for the newly created user.
\end_deeper 
\end_deeper 
\layout Enumerate

-flags <flag_list>
\begin_deeper 
\begin_deeper 
\layout Enumerate

This parameter allows you to create the user with an initial list of flags.
\end_deeper 
\end_deeper 
\layout Enumerate

-opts <opt_list>
\begin_deeper 
\begin_deeper 
\layout Enumerate

This paramter allows you to create the user with an initial list of options.
\layout Enumerate

The opt_list parameter is a list of lists.
 Each inner list contains two elements:
\begin_deeper 
\layout Enumerate

field
\layout Enumerate

value
\end_deeper 
\end_deeper 
\end_deeper 
\layout Enumerate

-pass <password>
\begin_deeper 
\begin_deeper 
\layout Enumerate

This optional parameter specifies the initial password to set to.
\layout Enumerate

The password parameter is plain-text.
\layout Enumerate

If this parameter is omited the account is locked and no password will match
 it.
\end_deeper 
\end_deeper 
\layout Subsubsection

Return Value
\layout Enumerate

On success the UID of the user created is returned;
\layout Enumerate

0 is returned on failure to create a user.
\layout Subsubsection

Notes
\layout Enumerate

(none)
\layout Subsection

user::delete
\layout Subsubsection

Syntax
\layout Subsubsection

Arguments
\layout Subsubsection

Return Value
\layout Subsubsection

Notes
\layout Subsection

user::change
\layout Subsubsection

Syntax
\layout Subsubsection

Arguments
\layout Subsubsection

Return Value
\layout Subsubsection

Notes
\layout Subsection

user::get
\layout Subsubsection

Syntax
\layout Subsubsection

Arguments
\layout Subsubsection

Return Value
\layout Subsubsection

Notes
\layout Subsection

user::setflag
\layout Subsubsection

Syntax
\layout Subsubsection

Arguments
\layout Subsubsection

Return Value
\layout Subsubsection

Notes
\layout Subsection

user::hasflag
\layout Subsubsection

Syntax
\layout Subsubsection

Arguments
\layout Subsubsection

Return Value
\layout Subsubsection

Notes
\layout Subsection

user::unsetflag
\layout Subsubsection

Syntax
\layout Subsubsection

Arguments
\layout Subsubsection

Return Value
\layout Subsubsection

Notes
\layout Subsection

user::setopt
\layout Subsubsection

Syntax
\layout Subsubsection

Arguments
\layout Subsubsection

Return Value
\layout Subsubsection

Notes
\layout Subsection

user::getopt
\layout Subsubsection

Syntax
\layout Subsubsection

Arguments
\layout Subsubsection

Return Value
\layout Subsubsection

Notes
\layout Subsection

user::listopt
\layout Subsubsection

Syntax
\layout Subsubsection

Arguments
\layout Subsubsection

Return Value
\layout Subsubsection

Notes
\layout Subsection

user::listflag
\layout Subsubsection

Syntax
\layout Subsubsection

Arguments
\layout Subsubsection

Return Value
\layout Subsubsection

Notes
\layout Subsection

user::flaglist
\layout Subsubsection

Syntax
\layout Subsubsection

Arguments
\layout Subsubsection

Return Value
\layout Subsubsection

Notes
\layout Section

Session
\layout Subsection

session::create
\layout Subsection

session::destroy
\layout Subsection

session::load
\layout Subsection

session::save
\layout Section

Module
\layout Subsection

module::register
\layout Subsection

module::list
\layout Subsection

module::info
\layout Subsection

module::unregister
\layout Section

UUID
\layout Subsection

uuid::gen
\layout Subsection

uuid::register
\layout Subsection

uuid::type
\layout Section

Notes
\layout Standard

(not yet implemented)
\layout Section

Workorders
\layout Standard

(not yet implemented)
\layout Section

Hooks
\layout Subsection

hook::register
\layout Subsection

hook::call
\layout Subsection

hook::unregister
\layout Chapter
\start_of_appendix 
Terminology
\layout Chapter

License
\the_end
