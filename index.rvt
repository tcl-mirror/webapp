<?
if {[catch {
	unset -nocomplain args
	unset -nocomplain module

	load_response args
	load_headers

	if {![info exists ::auto_path_set]} {
		set ::auto_path_set 1
		lappend auto_path local/packages packages
	}

	package require module
	package require debug

	if {![info exists ::done_onlyonce]} {
		foreach file [glob -nocomplain modules/load/onlyonce/*.tcl modules/autoload/onlyonce/*.tcl local/modules/load/onlyonce/*.tcl local/modules/autoload/onlyonce/*.tcl] {
			debug::log index.rvt "source $file"
			namespace eval :: "source $file"
		}
		set ::done_onlyonce 1
	}

	if {[info exists args(module)]} {
		set module $args(module)
	} else {
		set module main
	}

	set state INIT
	foreach file [glob -nocomplain modules/load/*.tcl modules/autoload/*.tcl local/modules/load/*.tcl local/modules/autoload/*.tcl] {
		source $file
	}
	# Do the header and footer init stuff only once.
	if {![info exists ::finimods]} {
		set ::finimods ""
		foreach initmod [lsort -dictionary $::initmods] {
			if {[string match "*:*" $initmod]} {
				set initmod [join [lrange [split $initmod :] 1 end] :]
			}
			set modpage [module::call $::session::vars(uid) $initmod start]
			if {$modpage == ""} {
				continue
			}
			lappend ::headers $initmod $modpage
			set ::finimods [linsert $::finimods 0 $initmod]
		}
		foreach finimod $::finimods {
			set modpage [module::call $::session::vars(uid) $finimod stop]
			if {$modpage == ""} {
				continue
			}
			lappend ::footers $finimod $modpage
		}
	}

	if {[info exists args(action)]} {
		set newpage [module::call $::session::vars(uid) $module $args(action)]
	} else {
		set newpage [module::call $::session::vars(uid) $module]
	}

	foreach {headmod header} $::headers {
		debug::log index.rvt "Displaying $header/$headmod"
		display $header $headmod
	}
	display $newpage $module
	foreach {footmod footer} $::footers {
		debug::log index.rvt "Displaying $footer/$footmod"
		display $footer $footmod
	}

	set state TERM
	foreach file [glob -nocomplain modules/unload/*.tcl local/modules/unload/*.tcl modules/autoload/*.tcl local/modules/autoload/*.tcl] {
		source $file
	}
} errInfo]} {
	puts "<HTML>"
	puts "  <HEAD><TITLE>ERROR</TITLE></HEAD>"
	puts "  <BODY>"
	puts "    <PRE>"
	puts "ERROR:"
	puts "$errorInfo"
	puts "    </PRE>"
	puts "  </BODY>"
	puts "</HTML>"
}
?>
